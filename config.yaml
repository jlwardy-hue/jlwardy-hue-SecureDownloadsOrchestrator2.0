directories:
  source: "/tmp/test_watch"
  destination: "/tmp/test_dest"

categories:
  documents:
    extensions: [".pdf", ".doc", ".docx", ".txt", ".rtf", ".odt"]
    destination: "documents"
  images:
    extensions: [".jpg", ".jpeg", ".png", ".gif", ".bmp", ".tiff", ".svg", ".webp"]
    destination: "images"
  audio:
    extensions: [".mp3", ".wav", ".flac", ".aac", ".ogg", ".m4a"]
    destination: "audio"
  video:
    extensions: [".mp4", ".avi", ".mkv", ".mov", ".wmv", ".webm"]
    destination: "video"
  archives:
    extensions: [".zip", ".rar", ".7z", ".tar", ".gz", ".tar.gz"]
    destination: "archives"
  code:
    extensions: [".py", ".js", ".html", ".css", ".java", ".cpp", ".json", ".xml"]
    destination: "code"
  executables:
    extensions: [".exe", ".msi", ".dmg", ".deb", ".rpm"]
    destination: "executables"

logging:
  console:
    enabled: true
    level: "INFO"
  file:
    enabled: false

application:
  name: "SecureDownloadsOrchestrator"
  version: "2.0"
  startup:
    validate_config: true
    create_missing_dirs: true

processing:
  enable_ai_classification: false
  enable_security_scan: false
  enable_ocr: true
  enable_archive_extraction: true
  enable_unified_pipeline: true

# AI Classification Configuration
# Set OPENAI_API_KEY environment variable before enabling AI classification
ai_classification:
  provider: "openai"              # AI provider (currently supports: openai)
  model: "gpt-3.5-turbo"         # OpenAI model to use for classification
  endpoint: "https://api.openai.com/v1"  # OpenAI API endpoint
  max_content_length: 2048       # Maximum characters to send for classification (2KB)
  timeout: 30                    # API request timeout in seconds
  # Note: API key is read from OPENAI_API_KEY environment variable for security