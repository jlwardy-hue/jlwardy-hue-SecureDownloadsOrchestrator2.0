[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "orchestrator"
version = "0.0.0"
description = "SecureDownloadsOrchestrator 2.0 - Secure file organization system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SecureDownloadsOrchestrator Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "watchdog>=2.0.0",
    "PyYAML>=6.0",
    "python-magic>=0.4.27",
    "pytesseract>=0.3.9",
    "Pillow>=9.0.0",
    "pdf2image>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/jlwardy-hue/jlwardy-hue-SecureDownloadsOrchestrator2.0"
Repository = "https://github.com/jlwardy-hue/jlwardy-hue-SecureDownloadsOrchestrator2.0"

[project.scripts]
secure-orchestrator = "orchestrator.main:main"

[tool.setuptools.packages.find]
include = ["orchestrator*"]
exclude = ["logs*", "tests*", "scripts*", "examples*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    # directories
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | logs
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["orchestrator"]
known_third_party = ["watchdog", "yaml", "magic", "pytest"]

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["orchestrator"]
omit = [
    "tests/*",
    "setup.py",
    "*/migrations/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"